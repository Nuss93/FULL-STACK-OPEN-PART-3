{"version":3,"sources":["components/PersonForm.jsx","services/persons.js","components/Persons.jsx","components/PopUpMessage.jsx","components/App.jsx","index.js"],"names":["PersonForm","handleChange","input","submitPerson","onSubmit","className","name","type","onChange","value","number","baseURL","axios","get","then","response","data","newPerson","post","console","log","id","delete","Persons","persons","search","deletePerson","filteredData","filter","a","toLowerCase","indexOf","map","index","onClick","PopUpMessage","message","display","color","style","position","bottom","width","Filter","handleSearch","App","useState","setPersons","setNewInput","setSearch","errorMessage","setErrorMessage","useEffect","personService","evt","newInput","target","event","preventDefault","newPersons","newData","length","push","setTimeout","catch","err","error","window","confirm","INDEX","findIndex","splice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6459eefc.chunk.js","sourcesContent":["import React from 'react'\n\nconst PersonForm = ({ handleChange, input , submitPerson}) => {\n    return (\n        <form onSubmit={submitPerson} className=\"mb-4\">\n            <div>\n                Name: <input name=\"name\" type=\"text\" onChange={handleChange} value={input.name} />\n            </div>\n            <div>\n                Number: <input name=\"number\" type=\"number\" onChange={handleChange} value={input.number} />\n            </div>\n\n            <div>\n                <button type=\"submit\" className=\"btn btn-info\">Add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm\n","import axios from 'axios';\n// import cors from 'cors';\nconst baseURL = '/api/persons';\n\nconst getAll = () => {\n    return axios.get(baseURL).then(response => response.data)\n}\n\nconst createPerson = newPerson => {\n    return axios.post(baseURL, newPerson).then(() => console.log('Operation success!'))\n}\n\nconst deletePerson = id => {\n    return axios.delete(`${baseURL}/${id}`).then(() => console.log('Delete success!'))\n}\n\nconst updateNumber = (id, changedPerson) => {\n    console.log('SERVICES', id, changedPerson)\n    return axios.put(`${baseURL}/${id}`, changedPerson).then(() => console.log('Update success!'))\n}\n\nexport default { getAll, createPerson, deletePerson, updateNumber }","import React from 'react'\nimport personService from '../services/persons'\n\nconst Persons = ({ persons, search, deletePerson }) => {\n    const filteredData = persons.filter(a => a.name.toLowerCase().indexOf(search.toLowerCase()) !== -1)\n    \n    \n    return (\n        <ul>\n            {filteredData.map((data,index) => <li key={index} className=\"mb-2\">{data.name} {data.number} <button className=\"btn btn-sm btn-danger\" onClick={() => {deletePerson(data)}}>Delete</button></li>)}\n        </ul>\n    )\n}\n\nexport default Persons\n","import React from 'react'\n\nexport const PopUpMessage = ({ message }) => {\n    if(!message.display) return null\n\n    return (\n        <div className={`alert alert-${message.color}`} style={{position:'absolute', bottom:'0', width:'calc(100% - 30px)'}}>\n            {message.message}\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport PersonForm from './PersonForm'\nimport Persons from './Persons'\nimport axios from 'axios'\nimport personService from '../services/persons'\nimport { PopUpMessage } from './PopUpMessage'\n\nconst Filter = ({ handleSearch, search }) => {\n  return (\n    <div className=\"mb-4\">\n      Search : <input name=\"search\" type=\"text\" onChange={handleSearch} value={search} />\n    </div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  // form data controll\n  const [ input, setNewInput ] = useState({ name: '', number: '' })\n  const [ search, setSearch ] = useState('')\n  const [errorMessage, setErrorMessage] = useState({ message: \"Message\", color: \"success\", display: false })\n\n  useEffect(() => {\n    console.log('effect')\n    \n    personService.getAll().then(response => {\n      console.log(response);\n      setPersons(response)\n    })\n  }, [])\n\n  const handleChange = (evt) => {\n    let newInput = {\n      ...input,\n      [evt.target.name] : evt.target.value\n    }\n    \n    setNewInput(newInput)\n  }\n  const handleSearch = (evt) => {\n    let newInput = evt.target.value\n    \n    setSearch(newInput)\n  }\n\n  const submitPerson = (event) => {\n    event.preventDefault()\n\n    let newPersons = [...persons]\n    let newData = { ...input, id: newPersons.length + 1 }\n\n    personService.createPerson(newData).then(() => {\n      newPersons.push(newData)\n      setPersons(newPersons)\n      setNewInput({ name: '', number: '' })\n\n      setErrorMessage({message:`Successfully added ${input.name}!`, color:\"success\", display:true})\n      setTimeout(() => {\n        setErrorMessage({ message: \"\", color: \"success\", display: false })\n      }, 5000);\n    }).catch(err => {\n      console.log(err.response.data);\n      setErrorMessage({message:err.response.data.error, color:\"danger\", display:true})\n      setTimeout(() => {\n        setErrorMessage({ message: \"\", color: \"success\", display: false })\n      }, 10000);\n    })\n  }\n\n  // ! This was the old version that overwrites a users phone number if the names arent unique\n  const submitPersonV1 = (event) => {\n    event.preventDefault()\n\n    let CHECKER = persons.findIndex(a => a.name.toLowerCase() === input.name.toLowerCase())\n\n    if(CHECKER !== -1){\n      let r = window.confirm(`${input.name} is already added to the phonebook, do you want to replcae the old number with the new one?`)\n      if(!r){ \n        setNewInput({ name: '', number: '' })\n        return\n      } else {\n        let newPersons = [...persons]\n        newPersons[CHECKER] = { ...persons[CHECKER], number : input.number }\n\n        const PERSONS = newPersons[CHECKER]\n        const changedPerson = { ...PERSONS, number : input.number }\n        console.log('persons', PERSONS);\n\n        console.log(CHECKER, PERSONS.id);\n        console.log('sini', changedPerson, CHECKER);\n\n        personService.updateNumber(PERSONS.id, changedPerson).then(() => {\n          setPersons(newPersons)\n          setNewInput({ name: '', number: '' })\n\n          setErrorMessage({message:`Successfully updated ${input.name}!`, color:\"success\", display:true})\n          setTimeout(() => {\n            setErrorMessage({ message: \"\", color: \"success\", display: false })\n          }, 5000);\n        }).catch(err => {\n          setErrorMessage({message:`The number for ${PERSONS.name} has already been deleted!`, color:\"danger\", display:true})\n          setTimeout(() => {\n            setErrorMessage({ message: \"\", color: \"success\", display: false })\n          }, 5000);\n        })\n        return\n      }\n    }\n\n    console.log('contingency');\n\n    let newPersons = [...persons]\n    let newData = { ...input, id: newPersons.length + 1 }\n    newPersons.push(newData)\n\n    personService.createPerson(newData).then(() => {\n      setPersons(newPersons)\n      setNewInput({ name: '', number: '' })\n\n      setErrorMessage({message:`Successfully added ${input.name}!`, color:\"success\", display:true})\n      setTimeout(() => {\n        setErrorMessage({ message: \"\", color: \"success\", display: false })\n      }, 5000);\n    }).catch(err => {\n      console.log(err.message);\n    })\n  }\n  const deletePerson = data => {\n    let r = window.confirm(`Are you sure you want to delete the contact ${data.name}?`)\n    if(!r){ return }\n    \n    let newPersons = [...persons]\n\n    personService.deletePerson(data.id).then(() => {\n      let INDEX = persons.findIndex(a => a.id === data.id)\n      newPersons.splice(INDEX, 1)\n      setPersons(newPersons)\n\n      setErrorMessage({message:`Deleted ${data.name}!`, color:\"danger\", display:true})\n      setTimeout(() => {\n        setErrorMessage({ message: \"\", color: \"success\", display: false })\n      }, 5000);\n    }).catch(err => {console.log(err.message)})\n  }\n  return (\n    <div>\n      <h2 className=\"m-0\">Search Phonebook</h2>\n      <Filter handleSearch={handleSearch} search={search} />\n\n      <h2 className=\"m-0\">Add New Contact</h2>\n      <PersonForm submitPerson={submitPerson} handleChange={handleChange} input={input} />\n\n      <h2>Phone Numbers</h2>\n      <Persons persons={persons} search={search} deletePerson={deletePerson} />\n\n      <PopUpMessage message={errorMessage} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}